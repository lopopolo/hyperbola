---
- name: Load deploy key variables
  include_vars: deploy-keys.yml
  no_log: true
- name: Load wiki htpasswd user variables
  include_vars: htpasswd.yml
  no_log: true

# deploy user
- name: Create wiki group
  group:
    name: hyperbola-wiki
    state: present
- name: Create wiki user
  user:
    name: hyperbola-wiki
    state: present
    group: hyperbola-wiki
    shell: /bin/bash
- name: Ensure .ssh directory exists
  file:
    path: /home/hyperbola-wiki/.ssh
    state: directory
    mode: 0700
    owner: hyperbola-wiki
- name: Install github deploy key
  copy:
    content: "{{ wiki_ssh_deploy_key }}"
    dest: /home/hyperbola-wiki/.ssh/id_rsa
    mode: 0600
    owner: hyperbola-wiki
- name: ensure github.com is a known host
  lineinfile:
    dest: /home/hyperbola-wiki/.ssh/known_hosts
    create: yes
    state: present
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    regexp: "^github\\.com"

# install wiki repo
- name: Create tls directory
  file:
    path: /hyperbola/tls
    state: directory
- name: Create hyperbola directories
  file:
    path: /hyperbola/wiki.hyperbo.la
    state: directory
- name: Set perms on git repo
  file:
    path: /hyperbola/wiki.hyperbo.la/wiki
    state: directory
    owner: hyperbola-wiki
    group: hyperbola-wiki
- name: clone wiki repo
  git:
    repo: git@github.com:lopopolo/wiki.hyperbo.la.git
    dest: /hyperbola/wiki.hyperbo.la/wiki
    version: master
  become: true
  become_user: hyperbola-wiki

# wiki ruby + gollum deps and config
- name: Install gollum build deps
  apt: name={{ item }} state=present
  with_items:
  - libicu-dev
- name: bundle install
  bundler:
    chdir: /hyperbola/wiki.hyperbo.la/wiki
    state: present
  notify: restart wiki
- name: Install thin config
  template:
    src: hyperbola-wiki.yaml.j2
    dest: /hyperbola/wiki.hyperbo.la/hyperbola-wiki.yaml
    mode: 0444
  notify: restart wiki
- name: Install config.ru
  template:
    src: config.ru.j2
    dest: /hyperbola/wiki.hyperbo.la/config.ru
    mode: 0444
  notify: restart wiki

# services
- name: Install systemd units
  copy:
    src: hyperbola-wiki@.service
    dest: /etc/systemd/system
    mode: 0444
  notify: reload systemd units
- name: Enable wiki instantiated units
  systemd:
    name: "hyperbola-wiki@{{ item }}.service"
    state: started
    enabled: true
  with_items:
    - 0
    - 1
    - 2

# nginx
- name: wiki htpasswd
  htpasswd:
    path: /hyperbola/wiki.hyperbo.la/wiki-auth
    name: "{{ item.username }}"
    password: "{{ item.password }}"
    owner: root
    group: "{{ nginx_user }}"
    mode: 0640
  no_log: true
  with_items:
    "{{ wiki_htpasswd.users }}"
  notify: reload nginx
- name: Make acme-challenge directory for Let's Encrypt
  file:
    path: /hyperbola/wiki.hyperbo.la/document-root/.well-known/acme-challenge
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
- name: wiki favicon
  copy:
    src: favicon.ico
    dest: /hyperbola/wiki.hyperbo.la/document-root/favicon.ico
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: 0664

# TLS
- name: TLS config dir
  file:
    path: /hyperbola/tools/tls/wiki.hyperbo.la
    state: directory
- name: TLS config - domains.txt
  template:
    src: tls/domains.txt.j2
    dest: /hyperbola/tools/tls/wiki.hyperbo.la/domains.txt
    mode: 0444
- name: TLS config - config.sh
  template:
    src: tls/config.j2
    dest: /hyperbola/tools/tls/wiki.hyperbo.la/config
    mode: 0444
- name: hyperbola tools bin directory
  file:
    path: /hyperbola/tools/bin
    state: directory
- name: wiki.hyperbo.la cert renewal script
  copy:
    src: tls/wiki-certs
    dest: /hyperbola/tools/bin/wiki-certs
    mode: 0554
- name: Install trusted certificate
  copy:
    src: tls/lets-encrypt-x3-cross-signed.pem
    dest: /hyperbola/tls/lets-encrypt-x3-cross-signed.pem
    owner: root
    group: "{{ nginx_user }}"
    mode: 0640
- name: bootstrap certs
  command: /hyperbola/tools/bin/wiki-certs
  args:
    creates: /hyperbola/tls/wiki.hyperbo.la/certs/{{ wiki_nginx_domain }}/fullchain.pem
  environment:
    CERTS_SKIP_NGINX_RELOAD: "true"
  notify: reload nginx
- name: Generate dhparams
  command: openssl dhparam -out /hyperbola/tls/wiki.hyperbo.la/certs/dhparam.pem 2048
  args:
    creates: /hyperbola/tls/wiki.hyperbo.la/certs/dhparam.pem
  notify: reload nginx
- name: Make dhparams readable by nginx
  file:
    path: /hyperbola/tls/wiki.hyperbo.la/certs/dhparam.pem
    owner: root
    group: "{{ nginx_user }}"
    mode: 440
  notify: reload nginx
- name: wiki-certs crontab
  cron:
    name: wiki-certs daily renewal check
    job: /hyperbola/tools/bin/wiki-certs >>/var/log/wiki-certs.log 2>&1
    minute: 15
    hour: 6
  when: "{{ hyperbola_environment != 'localhost' }}"
